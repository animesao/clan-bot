import disnake
from disnake.ext import commands
from datetime import datetime
from main import clan_data, save_clan_data

class Members(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command(
        name="profile",
        description="–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞"
    )
    async def profile_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        member: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫, —á–µ–π –ø—Ä–æ—Ñ–∏–ª—å –Ω—É–∂–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å", default=None)
    ):
        if member is None:
            member = inter.author

        embed = disnake.Embed(
            title=f"–ü—Ä–æ—Ñ–∏–ª—å {member.name}",
            color=member.color if member.color != disnake.Color.default() else disnake.Color.blue()
        )

        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        embed.add_field(
            name="ID",
            value=str(member.id),
            inline=True
        )
        embed.add_field(
            name="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è",
            value=member.joined_at.strftime("%d.%m.%Y %H:%M") if member.joined_at else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            inline=True
        )
        embed.add_field(
            name="–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω",
            value=member.created_at.strftime("%d.%m.%Y %H:%M"),
            inline=True
        )

        # –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        roles = [role.mention for role in member.roles if role.name != "@everyone"]
        if roles:
            embed.add_field(
                name="–†–æ–ª–∏",
                value=", ".join(roles) if len(", ".join(roles)) < 1024 else "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä–æ–ª–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è",
                inline=False
            )

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞–Ω–µ
        if str(member.id) in clan_data['members']:
            member_data = clan_data['members'][str(member.id)]
            joined_at = datetime.fromisoformat(member_data['joined_at'])
            embed.add_field(
                name="–î–∞—Ç–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∫–ª–∞–Ω",
                value=joined_at.strftime("%d.%m.%Y %H:%M"),
                inline=False
            )

        # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        warnings = [w for w in clan_data['warnings'].values() if w['user_id'] == str(member.id)]
        if warnings:
            warnings_text = "\n".join([
                f"‚Ä¢ {w['reason']} ({datetime.fromisoformat(w['timestamp']).strftime('%d.%m.%Y')}) [ID: {warning_id}]"
                for warning_id, w in clan_data['warnings'].items() if w['user_id'] == str(member.id)
            ])
            embed.add_field(
                name="–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
                value=warnings_text,
                inline=False
            )

        # –°—Ç–∞—Ç—É—Å
        status_emoji = {
            "online": "üü¢",
            "idle": "üü°",
            "dnd": "üî¥",
            "offline": "‚ö´"
        }
        embed.add_field(
            name="–°—Ç–∞—Ç—É—Å",
            value=f"{status_emoji.get(str(member.status), '‚ö´')} {str(member.status).title()}",
            inline=True
        )

        # –ê–≤–∞—Ç–∞—Ä
        embed.set_thumbnail(url=member.display_avatar.url)
        
        # –§—É—Ç–µ—Ä
        embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å–∏–ª: {inter.author.name}", icon_url=inter.author.display_avatar.url)

        await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="warn",
        description="–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫—É"
    )
    @commands.has_permissions(administrator=True)
    async def warn_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        member: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"),
        reason: str = commands.Param(description="–ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è")
    ):
        if str(member.id) not in clan_data['members']:
            await inter.response.send_message('–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–ª–∞–Ω–∞!', ephemeral=True)
            return

        warning_id = str(len(clan_data['warnings']) + 1)
        clan_data['warnings'][warning_id] = {
            'user_id': str(member.id),
            'reason': reason,
            'timestamp': datetime.now().isoformat(),
            'issued_by': str(inter.author.id)
        }
        save_clan_data()

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –õ–°
        try:
            embed = disnake.Embed(
                title="–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ",
                description=f"**–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
                color=disnake.Color.red()
            )
            await member.send(embed=embed)
        except:
            pass

        await inter.response.send_message(f'–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞–Ω–æ {member.mention}!', ephemeral=True)

    @commands.slash_command(
        name="warnings",
        description="–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–∞"
    )
    @commands.has_permissions(administrator=True)
    async def warnings_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        member: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫, —á—å–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –Ω—É–∂–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å")
    ):
        warnings = [w for w in clan_data['warnings'].values() if w['user_id'] == str(member.id)]
        
        if not warnings:
            await inter.response.send_message(f'–£ {member.mention} –Ω–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.', ephemeral=True)
            return

        embed = disnake.Embed(
            title=f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è {member.name}",
            color=disnake.Color.orange()
        )
        
        for warning_id, warning in clan_data['warnings'].items():
            if warning['user_id'] == str(member.id):
                issued_by = await self.bot.fetch_user(int(warning['issued_by']))
                embed.add_field(
                    name=f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç {datetime.fromisoformat(warning['timestamp']).strftime('%d.%m.%Y %H:%M')} [ID: {warning_id}]",
                    value=f"**–ü—Ä–∏—á–∏–Ω–∞:** {warning['reason']}\n"
                          f"**–í—ã–¥–∞–ª:** {issued_by.name}",
                    inline=False
                )

        await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="kick",
        description="–ò—Å–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –∫–ª–∞–Ω–∞ –∏ —Å —Å–µ—Ä–≤–µ—Ä–∞"
    )
    @commands.has_permissions(administrator=True)
    async def kick_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        member: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å"),
        reason: str = commands.Param(description="–ü—Ä–∏—á–∏–Ω–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è")
    ):
        if str(member.id) not in clan_data['members']:
            await inter.response.send_message('–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–ª–∞–Ω–∞!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –ª–∏ –º—ã –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if member.guild_permissions.administrator:
            await inter.response.send_message('–ù–µ–ª—å–∑—è –∏—Å–∫–ª—é—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞!', ephemeral=True)
            return

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –≥—Ä—É–ø–ø–∏—Ä–æ–≤–æ–∫
        for faction in clan_data['factions']['factions'].values():
            if faction['role_id']:
                role = inter.guild.get_role(faction['role_id'])
                if role and role in member.roles:
                    await member.remove_roles(role)

        # –£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
        member_role = disnake.utils.get(inter.guild.roles, id=clan_data['roles']['member'])
        if member_role and member_role in member.roles:
            await member.remove_roles(member_role)

        # –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        del clan_data['members'][str(member.id)]
        save_clan_data()

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –õ–°
        try:
            embed = disnake.Embed(
                title="–í—ã –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –∫–ª–∞–Ω–∞ –∏ —Å —Å–µ—Ä–≤–µ—Ä–∞",
                description=f"**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n**–í—ã–¥–∞–ª:** {inter.author.name}",
                color=disnake.Color.red()
            )
            await member.send(embed=embed)
        except:
            pass

        # –ö–∏–∫ —Å —Å–µ—Ä–≤–µ—Ä–∞
        await member.kick(reason=f"{reason} | –í—ã–¥–∞–ª: {inter.author.name}")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–π
        if clan_data['settings']['announcement_channel']:
            channel = self.bot.get_channel(clan_data['settings']['announcement_channel'])
            if channel:
                embed = disnake.Embed(
                    title="–£—á–∞—Å—Ç–Ω–∏–∫ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –∏ —Å —Å–µ—Ä–≤–µ—Ä–∞",
                    description=f"{member.mention} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –∏ —Å —Å–µ—Ä–≤–µ—Ä–∞.\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n**–í—ã–¥–∞–ª:** {inter.author.mention}",
                    color=disnake.Color.red()
                )
                await channel.send(embed=embed)

        await inter.response.send_message(f'{member.mention} –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –∏ —Å —Å–µ—Ä–≤–µ—Ä–∞!', ephemeral=True)

    @commands.slash_command(
        name="ban",
        description="–ó–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"
    )
    @commands.has_permissions(administrator=True)
    async def ban_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        member: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å"),
        reason: str = commands.Param(description="–ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞"),
        delete_messages: int = commands.Param(
            description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (0-7)",
            default=0,
            min_value=0,
            max_value=30
        )
    ):
        if str(member.id) not in clan_data['members']:
            await inter.response.send_message('–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–ª–∞–Ω–∞!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –ª–∏ –º—ã –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if member.guild_permissions.administrator:
            await inter.response.send_message('–ù–µ–ª—å–∑—è –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞!', ephemeral=True)
            return

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –≥—Ä—É–ø–ø–∏—Ä–æ–≤–æ–∫
        for faction in clan_data['factions']['factions'].values():
            if faction['role_id']:
                role = inter.guild.get_role(faction['role_id'])
                if role and role in member.roles:
                    await member.remove_roles(role)

        # –£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
        member_role = disnake.utils.get(inter.guild.roles, id=clan_data['roles']['member'])
        if member_role and member_role in member.roles:
            await member.remove_roles(member_role)

        # –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        del clan_data['members'][str(member.id)]
        save_clan_data()

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –õ–° –ø–µ—Ä–µ–¥ –±–∞–Ω–æ–º
        try:
            embed = disnake.Embed(
                title="–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã",
                description=f"**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n**–í—ã–¥–∞–ª:** {inter.author.name}",
                color=disnake.Color.dark_red()
            )
            await member.send(embed=embed)
        except:
            pass

        # –ë–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–∞
        await member.ban(reason=f"{reason} | –í—ã–¥–∞–ª: {inter.author.name}", delete_message_days=delete_messages)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–π
        if clan_data['settings']['announcement_channel']:
            channel = self.bot.get_channel(clan_data['settings']['announcement_channel'])
            if channel:
                embed = disnake.Embed(
                    title="–£—á–∞—Å—Ç–Ω–∏–∫ –∑–∞–±–∞–Ω–µ–Ω",
                    description=f"{member.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n**–í—ã–¥–∞–ª:** {inter.author.mention}",
                    color=disnake.Color.dark_red()
                )
                await channel.send(embed=embed)

        await inter.response.send_message(f'{member.mention} –∑–∞–±–∞–Ω–µ–Ω!', ephemeral=True)

    @commands.slash_command(
        name="deletewarn",
        description="–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É —É—á–∞—Å—Ç–Ω–∏–∫–∞"
    )
    async def delete_warn_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        member: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"),
        warning_id: str = commands.Param(description="ID –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
    ):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º
        leader_role = disnake.utils.get(inter.guild.roles, id=clan_data['roles']['leader'])
        if not leader_role or leader_role not in inter.author.roles:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è!', ephemeral=True)
            return

        if warning_id not in clan_data['warnings']:
            await inter.response.send_message('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        warning = clan_data['warnings'][warning_id]
        if warning['user_id'] != str(member.id):
            await inter.response.send_message('–≠—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É!', ephemeral=True)
            return

        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        del clan_data['warnings'][warning_id]
        save_clan_data()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –õ–°
        try:
            embed = disnake.Embed(
                title="–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ",
                description=f"–í–∞—à–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ –ª–∏–¥–µ—Ä–æ–º –∫–ª–∞–Ω–∞.",
                color=disnake.Color.green()
            )
            await member.send(embed=embed)
        except:
            pass

        await inter.response.send_message(f'–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ —É {member.mention}!', ephemeral=True)

def setup(bot):
    bot.add_cog(Members(bot))