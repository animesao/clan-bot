import disnake
from disnake.ext import commands
from datetime import datetime, timedelta
from main import clan_data, save_clan_data

class Subclans(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command(
        name="createsubclan",
        description="–°–æ–∑–¥–∞—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–∞"
    )
    async def create_subclan_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        description: str = commands.Param(description="–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        max_members: int = commands.Param(description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", default=50)
    ):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        await inter.response.defer(ephemeral=True)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω
        can_create, remaining_time = self.check_cooldown(str(inter.author.id))
        if not can_create:
            await inter.edit_original_response(content=f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –µ—â–µ {remaining_time}!')
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –¥—Ä—É–≥–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        for subclan_name, subclan in clan_data.get('subclans', {}).items():
            if str(inter.author.id) in subclan['members']:
                await inter.edit_original_response(content=f'–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {subclan_name}! –°–Ω–∞—á–∞–ª–∞ –≤—ã–π–¥–∏—Ç–µ –∏–∑ –Ω–µ–≥–æ.')
                return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞–ª –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ
        for subclan in clan_data.get('subclans', {}).values():
            if str(inter.author.id) == subclan['created_by']:
                await inter.edit_original_response(content='–í—ã —É–∂–µ —Å–æ–∑–¥–∞–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ! –û–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.')
                return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–æ–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–∞
        if 'roles' not in clan_data:
            clan_data['roles'] = {}
            
        if 'officer' not in clan_data['roles']:
            await inter.edit_original_response(content='–†–æ–ª—å –æ—Ñ–∏—Ü–µ—Ä–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /setrole –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–∞.')
            return

        officer_role = inter.guild.get_role(clan_data['roles']['officer'])
        
        if not officer_role:
            await inter.edit_original_response(content='–†–æ–ª—å –æ—Ñ–∏—Ü–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /setrole –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–∞.')
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª—å –æ—Ñ–∏—Ü–µ—Ä–∞
        if officer_role not in inter.author.roles:
            await inter.edit_original_response(content='–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è! –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å –æ—Ñ–∏—Ü–µ—Ä–∞.')
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
        if name in clan_data.get('subclans', {}):
            await inter.edit_original_response(content='–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')
            return

        try:
            # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            category = await inter.guild.create_category(name=f"üìå {name}")
            
            # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            general_channel = await category.create_text_channel("–æ–±—â–∏–π")
            announcements_channel = await category.create_text_channel("–æ–±—ä—è–≤–ª–µ–Ω–∏—è")
            voice_channel = await category.create_voice_channel("–≥–æ–ª–æ—Å–æ–≤–æ–π")

            # –°–æ–∑–¥–∞–µ–º —Ä–æ–ª–∏ –¥–ª—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            leader_role = await inter.guild.create_role(
                name=f"{name} | –õ–∏–¥–µ—Ä",
                color=disnake.Color.gold(),
                reason=f"–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {name}"
            )
            officer_role = await inter.guild.create_role(
                name=f"{name} | –û—Ñ–∏—Ü–µ—Ä",
                color=disnake.Color.blue(),
                reason=f"–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {name}"
            )
            member_role = await inter.guild.create_role(
                name=f"{name} | –£—á–∞—Å—Ç–Ω–∏–∫",
                color=disnake.Color.green(),
                reason=f"–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {name}"
            )

            # –í—ã–¥–∞–µ–º —Ä–æ–ª—å –ª–∏–¥–µ—Ä–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—é
            await inter.author.add_roles(leader_role)

            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤
            for channel in [general_channel, announcements_channel, voice_channel]:
                await channel.set_permissions(inter.guild.default_role, read_messages=False)
                await channel.set_permissions(member_role, read_messages=True, send_messages=True)
                await channel.set_permissions(officer_role, read_messages=True, send_messages=True, manage_messages=True)
                await channel.set_permissions(leader_role, read_messages=True, send_messages=True, manage_messages=True, manage_channels=True)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
            if 'subclans' not in clan_data:
                clan_data['subclans'] = {}

            clan_data['subclans'][name] = {
                'description': description,
                'created_at': datetime.now().isoformat(),
                'created_by': str(inter.author.id),
                'max_members': max_members,
                'members': [str(inter.author.id)],
                'channels': {
                    'category': category.id,
                    'general': general_channel.id,
                    'announcements': announcements_channel.id,
                    'voice': voice_channel.id
                },
                'roles': {
                    'leader': leader_role.id,
                    'officer': officer_role.id,
                    'member': member_role.id
                }
            }
            save_clan_data()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏
            embed = disnake.Embed(
                title="–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!",
                description=f"**–ù–∞–∑–≤–∞–Ω–∏–µ:** {name}\n"
                           f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {description}\n"
                           f"**–ú–∞–∫—Å–∏–º—É–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {max_members}\n"
                           f"**–õ–∏–¥–µ—Ä:** {inter.author.mention}",
                color=disnake.Color.green()
            )
            await announcements_channel.send(embed=embed)
            await inter.edit_original_response(content=f'–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ "{name}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!')

        except Exception as e:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
            try:
                if 'category' in locals():
                    await category.delete()
                if 'leader_role' in locals():
                    await leader_role.delete()
                if 'officer_role' in locals():
                    await officer_role.delete()
                if 'member_role' in locals():
                    await member_role.delete()
            except:
                pass

            await inter.edit_original_response(content=f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: {str(e)}')

    @commands.slash_command(
        name="subclaninvite",
        description="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
    )
    async def invite_to_subclan_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        member: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"),
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        leader_role = inter.guild.get_role(subclan['roles']['leader'])
        officer_role = inter.guild.get_role(subclan['roles']['officer'])
        
        if not (leader_role in inter.author.roles or officer_role in inter.author.roles):
            await inter.response.send_message('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        if len(subclan['members']) >= subclan['max_members']:
            await inter.response.send_message('–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —É–∂–µ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        if str(member.id) in subclan['members']:
            await inter.response.send_message('–≠—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –¥—Ä—É–≥–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        for other_subclan_name, other_subclan in clan_data.get('subclans', {}).items():
            if other_subclan_name != subclan_name and str(member.id) in other_subclan['members']:
                await inter.response.send_message(f'–≠—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {other_subclan_name}! –°–Ω–∞—á–∞–ª–∞ –æ–Ω –¥–æ–ª–∂–µ–Ω –≤—ã–π—Ç–∏ –∏–∑ –Ω–µ–≥–æ.', ephemeral=True)
                return

        # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞
        member_role = inter.guild.get_role(subclan['roles']['member'])
        await member.add_roles(member_role)
        subclan['members'].append(str(member.id))
        save_clan_data()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
        if announcements_channel:
            embed = disnake.Embed(
                title="–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!",
                description=f"{member.mention} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é!",
                color=disnake.Color.green()
            )
            await announcements_channel.send(embed=embed)

        try:
            embed = disnake.Embed(
                title=f"–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ {subclan_name}",
                description=f"–í—ã –±—ã–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ {subclan_name}!\n"
                           f"–û–ø–∏—Å–∞–Ω–∏–µ: {subclan['description']}",
                color=disnake.Color.blue()
            )
            await member.send(embed=embed)
        except:
            pass

        await inter.response.send_message(f'{member.mention} –ø—Ä–∏–≥–ª–∞—à–µ–Ω –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ!', ephemeral=True)

    @commands.slash_command(
        name="subclankick",
        description="–ò—Å–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def kick_from_subclan_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        member: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è"),
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        reason: str = commands.Param(description="–ü—Ä–∏—á–∏–Ω–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        leader_role = inter.guild.get_role(subclan['roles']['leader'])
        officer_role = inter.guild.get_role(subclan['roles']['officer'])
        
        if not (leader_role in inter.author.roles or officer_role in inter.author.roles):
            await inter.response.send_message('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        if str(member.id) not in subclan['members']:
            await inter.response.send_message('–≠—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        # –£–¥–∞–ª—è–µ–º —Ä–æ–ª–∏
        for role_id in subclan['roles'].values():
            role = inter.guild.get_role(role_id)
            if role and role in member.roles:
                await member.remove_roles(role)

        # –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        subclan['members'].remove(str(member.id))
        save_clan_data()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
        if announcements_channel:
            embed = disnake.Embed(
                title="–£—á–∞—Å—Ç–Ω–∏–∫ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è",
                description=f"{member.mention} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è.\n–ü—Ä–∏—á–∏–Ω–∞: {reason}",
                color=disnake.Color.red()
            )
            await announcements_channel.send(embed=embed)

        try:
            embed = disnake.Embed(
                title=f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {subclan_name}",
                description=f"–í—ã –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {subclan_name}.\n–ü—Ä–∏—á–∏–Ω–∞: {reason}",
                color=disnake.Color.red()
            )
            await member.send(embed=embed)
        except:
            pass

        await inter.response.send_message(f'{member.mention} –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!', ephemeral=True)

    @commands.slash_command(
        name="subclaninfo",
        description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏"
    )
    async def subclan_info_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        created_at = datetime.fromisoformat(subclan['created_at'])
        leader = await self.bot.fetch_user(int(subclan['created_by']))

        embed = disnake.Embed(
            title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {subclan_name}",
            description=subclan['description'],
            color=disnake.Color.blue()
        )

        embed.add_field(
            name="–õ–∏–¥–µ—Ä",
            value=leader.mention,
            inline=True
        )
        embed.add_field(
            name="–°–æ–∑–¥–∞–Ω–æ",
            value=created_at.strftime("%d.%m.%Y %H:%M"),
            inline=True
        )
        embed.add_field(
            name="–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
            value=f"{len(subclan['members'])}/{subclan['max_members']}",
            inline=True
        )

        # –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        members_list = []
        for member_id in subclan['members']:
            try:
                member = await self.bot.fetch_user(int(member_id))
                member_obj = inter.guild.get_member(int(member_id))
                if member_obj:
                    display_role_name = "–£—á–∞—Å—Ç–Ω–∏–∫" # Default if no specific role found

                    # Collect all relevant subclan roles (by object, not just ID)
                    subclan_roles_objects = {}
                    # Add main roles
                    for role_type, role_id in subclan['roles'].items():
                        role = inter.guild.get_role(role_id)
                        if role:
                            subclan_roles_objects[role_type] = role

                    # Add custom roles
                    if 'custom_roles' in subclan:
                        for custom_role_name, custom_role_data in subclan['custom_roles'].items():
                             role = inter.guild.get_role(custom_role_data['id'])
                             if role:
                                subclan_roles_objects[custom_role_name] = role

                    # Find the highest role the member has from the subclan roles
                    highest_subclan_role = None
                    for role in member_obj.roles:
                         if role.id in [r.id for r in subclan_roles_objects.values()]:
                             # This role is one of the subclan's roles
                             if highest_subclan_role is None or role > highest_subclan_role:
                                 highest_subclan_role = role

                    if highest_subclan_role:
                         # Use the mention for the highest role found
                         display_role_name = highest_subclan_role.mention
                    elif str(member.id) == subclan['created_by']:
                        # Special case: Ensure leader is shown even if role object lookup fails (shouldn't happen)
                        leader_role = inter.guild.get_role(subclan['roles']['leader'])
                        if leader_role:
                             display_role_name = leader_role.mention
                        else:
                             display_role_name = "–õ–∏–¥–µ—Ä"

                    members_list.append(f"{member.name} ({display_role_name})")
            except Exception as e:
                print(f"Error fetching member or roles for {member_id}: {e}")
                # If an error occurs for a member, still try to list them without role
                try:
                    basic_member = await self.bot.fetch_user(int(member_id))
                    members_list.append(f"{basic_member.name} (–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–æ–ª—å)")
                except:
                    members_list.append(f"Unknown User (–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–æ–ª—å)")
                continue

        if members_list:
            embed.add_field(
                name="–£—á–∞—Å—Ç–Ω–∏–∫–∏",
                value="\n".join(members_list),
                inline=False
            )

        await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="subclans",
        description="–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π"
    )
    async def list_subclans_slash(self, inter: disnake.ApplicationCommandInteraction):
        if not clan_data.get('subclans'):
            await inter.response.send_message('–ù–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π!', ephemeral=True)
            return

        embed = disnake.Embed(
            title="–°–ø–∏—Å–æ–∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π",
            color=disnake.Color.blue()
        )

        for name, subclan in clan_data['subclans'].items():
            created_at = datetime.fromisoformat(subclan['created_at'])
            leader = await self.bot.fetch_user(int(subclan['created_by']))
            
            embed.add_field(
                name=name,
                value=f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {subclan['description']}\n"
                      f"**–õ–∏–¥–µ—Ä:** {leader.mention}\n"
                      f"**–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {len(subclan['members'])}/{subclan['max_members']}\n"
                      f"**–°–æ–∑–¥–∞–Ω–æ:** {created_at.strftime('%d.%m.%Y')}",
                inline=False
            )

        await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="subclanapply",
        description="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
    )
    async def apply_to_subclan_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        reason: str = commands.Param(description="–ü—Ä–∏—á–∏–Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω
        can_join, remaining_time = self.check_cooldown(str(inter.author.id))
        if not can_join:
            await inter.response.send_message(f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é –µ—â–µ {remaining_time}!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —É–∂–µ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        if str(inter.author.id) in subclan['members']:
            await inter.response.send_message('–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —ç—Ç–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –¥—Ä—É–≥–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        for other_subclan_name, other_subclan in clan_data.get('subclans', {}).items():
            if other_subclan_name != subclan_name and str(inter.author.id) in other_subclan['members']:
                await inter.response.send_message(f'–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {other_subclan_name}! –°–Ω–∞—á–∞–ª–∞ –≤—ã–π–¥–∏—Ç–µ –∏–∑ –Ω–µ–≥–æ.', ephemeral=True)
                return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥—Ä—É–≥–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ
        for other_subclan_name, other_subclan in clan_data.get('subclans', {}).items():
            if str(inter.author.id) == other_subclan['created_by']:
                await inter.response.send_message(f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {other_subclan_name}!', ephemeral=True)
                return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        if len(subclan['members']) >= subclan['max_members']:
            await inter.response.send_message('–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!', ephemeral=True)
            return

        # –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É
        if 'applications' not in subclan:
            subclan['applications'] = {}

        application_id = str(inter.author.id)
        subclan['applications'][application_id] = {
            'user_id': str(inter.author.id),
            'reason': reason,
            'timestamp': datetime.now().isoformat(),
            'status': 'pending'
        }
        save_clan_data()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ª–∏–¥–µ—Ä—É –∏ –æ—Ñ–∏—Ü–µ—Ä–∞–º
        leader = await self.bot.fetch_user(int(subclan['created_by']))
        leader_role = inter.guild.get_role(subclan['roles']['leader'])
        officer_role = inter.guild.get_role(subclan['roles']['officer'])

        embed = disnake.Embed(
            title="–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ",
            description=f"**–£—á–∞—Å—Ç–Ω–∏–∫:** {inter.author.mention}\n"
                       f"**–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
            color=disnake.Color.blue()
        )
        embed.set_footer(text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /subclanaccept –∏–ª–∏ /subclanreject –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞—è–≤–∫—É")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–π
        announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
        if announcements_channel:
            await announcements_channel.send(
                content=f"{leader_role.mention} {officer_role.mention}",
                embed=embed
            )

        await inter.response.send_message('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ª–∏–¥–µ—Ä–∞ –∏–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–∞.', ephemeral=True)

    @commands.slash_command(
        name="subclanaccept",
        description="–ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
    )
    async def accept_subclan_application_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        user: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫, —á—å—é –∑–∞—è–≤–∫—É –ø—Ä–∏–Ω–∏–º–∞–µ–º")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        leader_role = inter.guild.get_role(subclan['roles']['leader'])
        officer_role = inter.guild.get_role(subclan['roles']['officer'])
        
        if not (leader_role in inter.author.roles or officer_role in inter.author.roles):
            await inter.response.send_message('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–æ–∫! –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å –ª–∏–¥–µ—Ä–∞ –∏–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è.', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞—è–≤–∫–∏
        if 'applications' not in subclan or str(user.id) not in subclan['applications']:
            await inter.response.send_message('–ó–∞—è–≤–∫–∞ –æ—Ç —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        if len(subclan['members']) >= subclan['max_members']:
            await inter.response.send_message('–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –¥—Ä—É–≥–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        for other_subclan_name, other_subclan in clan_data.get('subclans', {}).items():
            if other_subclan_name != subclan_name and str(user.id) in other_subclan['members']:
                await inter.response.send_message(f'–≠—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {other_subclan_name}! –°–Ω–∞—á–∞–ª–∞ –æ–Ω –¥–æ–ª–∂–µ–Ω –≤—ã–π—Ç–∏ –∏–∑ –Ω–µ–≥–æ.', ephemeral=True)
                return

        # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞
        member_role = inter.guild.get_role(subclan['roles']['member'])
        await user.add_roles(member_role)
        subclan['members'].append(str(user.id))
        
        # –£–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫—É
        del subclan['applications'][str(user.id)]
        save_clan_data()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
        if announcements_channel:
            embed = disnake.Embed(
                title="–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!",
                description=f"{user.mention} –ø—Ä–∏–Ω—è—Ç –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ!",
                color=disnake.Color.green()
            )
            await announcements_channel.send(embed=embed)

        try:
            embed = disnake.Embed(
                title=f"–ó–∞—è–≤–∫–∞ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ {subclan_name} –ø—Ä–∏–Ω—è—Ç–∞!",
                description=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ {subclan_name} –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞!",
                color=disnake.Color.green()
            )
            await user.send(embed=embed)
        except:
            pass

        await inter.response.send_message(f'–ó–∞—è–≤–∫–∞ –æ—Ç {user.mention} –ø—Ä–∏–Ω—è—Ç–∞!', ephemeral=True)

    @commands.slash_command(
        name="subclanreject",
        description="–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
    )
    async def reject_subclan_application_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        user: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫, —á—å—é –∑–∞—è–≤–∫—É –æ—Ç–∫–ª–æ–Ω—è–µ–º"),
        reason: str = commands.Param(description="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        leader_role = inter.guild.get_role(subclan['roles']['leader'])
        officer_role = inter.guild.get_role(subclan['roles']['officer'])
        
        if not (leader_role in inter.author.roles or officer_role in inter.author.roles):
            await inter.response.send_message('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–æ–∫!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞—è–≤–∫–∏
        if 'applications' not in subclan or str(user.id) not in subclan['applications']:
            await inter.response.send_message('–ó–∞—è–≤–∫–∞ –æ—Ç —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!', ephemeral=True)
            return

        # –£–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫—É
        del subclan['applications'][str(user.id)]
        save_clan_data()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
        if announcements_channel:
            embed = disnake.Embed(
                title="–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                description=f"–ó–∞—è–≤–∫–∞ –æ—Ç {user.mention} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n–ü—Ä–∏—á–∏–Ω–∞: {reason}",
                color=disnake.Color.red()
            )
            await announcements_channel.send(embed=embed)

        try:
            embed = disnake.Embed(
                title=f"–ó–∞—è–≤–∫–∞ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ {subclan_name} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                description=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ {subclan_name} –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n–ü—Ä–∏—á–∏–Ω–∞: {reason}",
                color=disnake.Color.red()
            )
            await user.send(embed=embed)
        except:
            pass

        await inter.response.send_message(f'–ó–∞—è–≤–∫–∞ –æ—Ç {user.mention} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!', ephemeral=True)

    @commands.slash_command(
        name="subclandelete",
        description="–£–¥–∞–ª–∏—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
    )
    async def delete_subclan_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
    ):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        await inter.response.defer(ephemeral=True)

        if subclan_name not in clan_data.get('subclans', {}):
            await inter.edit_original_response(content='–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.edit_original_response(content='–í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ—ë –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ!')
            return

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        confirm_button = disnake.ui.Button(
            style=disnake.ButtonStyle.danger,
            label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
            custom_id="confirm_delete"
        )
        cancel_button = disnake.ui.Button(
            style=disnake.ButtonStyle.secondary,
            label="–û—Ç–º–µ–Ω–∞",
            custom_id="cancel_delete"
        )

        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
        components = disnake.ui.ActionRow(confirm_button, cancel_button)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        message = await inter.edit_original_response(
            content=f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ '{subclan_name}'?\n"
                   "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!",
            components=[components]
        )

        # –ñ–¥–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        try:
            interaction = await self.bot.wait_for(
                "button_click",
                check=lambda i: i.author == inter.author and i.message.id == message.id,
                timeout=30.0
            )
        except:
            await inter.edit_original_response(
                content="–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
                components=[]
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞
        if interaction.data.custom_id == "cancel_delete":
            await interaction.response.edit_message(
                content="–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ.",
                components=[]
            )
            return

        # –ï—Å–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ, —É–¥–∞–ª—è–µ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ
        await interaction.response.edit_message(
            content="–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è...",
            components=[]
        )

        try:
            # –£–¥–∞–ª—è–µ–º —Ä–æ–ª–∏
            all_subclan_role_ids = list(subclan['roles'].values())
            if 'custom_roles' in subclan:
                for custom_role_data in subclan['custom_roles'].values():
                    all_subclan_role_ids.append(custom_role_data['id'])

            for role_id in all_subclan_role_ids:
                role = inter.guild.get_role(role_id)
                if role:
                    try:
                        await role.delete(reason=f"–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {subclan_name}")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏ {role.name}: {str(e)}")

            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞–Ω–∞–ª—ã –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            channels_to_delete = []

            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
            for channel_id in subclan['channels'].values():
                channel = inter.guild.get_channel(channel_id)
                if channel:
                    channels_to_delete.append(channel)

            # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
            if 'additional_channels' in subclan:
                for channel_id in subclan['additional_channels'].keys():
                    channel = inter.guild.get_channel(int(channel_id))
                    if channel:
                        channels_to_delete.append(channel)

            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞–Ω–∞–ª—ã
            for channel in channels_to_delete:
                try:
                    await channel.delete(reason=f"–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {subclan_name}")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ {channel.name}: {str(e)}")

            # –£–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            category = inter.guild.get_channel(subclan['channels']['category'])
            if category:
                try:
                    await category.delete(reason=f"–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {subclan_name}")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name}: {str(e)}")

            # –£–¥–∞–ª—è–µ–º –∏–∑ –¥–∞–Ω–Ω—ã—Ö
            del clan_data['subclans'][subclan_name]
            save_clan_data()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π –æ—Ç–≤–µ—Ç
            await interaction.followup.send(
                content=f'–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ "{subclan_name}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!',
                ephemeral=True
            )

        except Exception as e:
            error_message = f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: {str(e)}'
            print(error_message)  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            try:
                await interaction.followup.send(
                    content=error_message,
                    ephemeral=True
                )
            except:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ followup, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ edit
                try:
                    await interaction.edit_original_response(
                        content=error_message,
                        components=[]
                    )
                except:
                    # –ï—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ —É–¥–∞–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await inter.followup.send(
                        content=error_message,
                        ephemeral=True
                    )

    @commands.slash_command(
        name="subclanapplications",
        description="–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
    )
    async def view_subclan_applications_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        leader_role = inter.guild.get_role(subclan['roles']['leader'])
        officer_role = inter.guild.get_role(subclan['roles']['officer'])
        
        if not (leader_role in inter.author.roles or officer_role in inter.author.roles):
            await inter.response.send_message('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–æ–∫! –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å –ª–∏–¥–µ—Ä–∞ –∏–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è.', ephemeral=True)
            return

        if 'applications' not in subclan or not subclan['applications']:
            await inter.response.send_message('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫!', ephemeral=True)
            return

        embed = disnake.Embed(
            title=f"–ó–∞—è–≤–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ {subclan_name}",
            color=disnake.Color.blue()
        )

        for user_id, application in subclan['applications'].items():
            user = await self.bot.fetch_user(int(user_id))
            timestamp = datetime.fromisoformat(application['timestamp'])
            
            embed.add_field(
                name=f"–ó–∞—è–≤–∫–∞ –æ—Ç {user.name}",
                value=f"**–ü—Ä–∏—á–∏–Ω–∞:** {application['reason']}\n"
                      f"**–ü–æ–¥–∞–Ω–∞:** {timestamp.strftime('%d.%m.%Y %H:%M')}\n"
                      f"**–°—Ç–∞—Ç—É—Å:** {application['status']}",
                inline=False
            )

        await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="subclanpromote",
        description="–ü–æ–≤—ã—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–æ –æ—Ñ–∏—Ü–µ—Ä–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def promote_to_officer_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        member: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç –ø–æ–≤—ã—à–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        if str(member.id) not in subclan['members']:
            await inter.response.send_message('–≠—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ –æ—Ñ–∏—Ü–µ—Ä–æ–º
        officer_role = inter.guild.get_role(subclan['roles']['officer'])
        if officer_role in member.roles:
            await inter.response.send_message('–≠—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ñ–∏—Ü–µ—Ä–æ–º!', ephemeral=True)
            return

        # –í—ã–¥–∞–µ–º —Ä–æ–ª—å –æ—Ñ–∏—Ü–µ—Ä–∞
        await member.add_roles(officer_role)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
        if announcements_channel:
            embed = disnake.Embed(
                title="–ù–æ–≤—ã–π –æ—Ñ–∏—Ü–µ—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!",
                description=f"{member.mention} –ø–æ–≤—ã—à–µ–Ω –¥–æ –æ—Ñ–∏—Ü–µ—Ä–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!",
                color=disnake.Color.blue()
            )
            await announcements_channel.send(embed=embed)

        try:
            embed = disnake.Embed(
                title=f"–ü–æ–≤—ã—à–µ–Ω–∏–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {subclan_name}",
                description=f"–í—ã –±—ã–ª–∏ –ø–æ–≤—ã—à–µ–Ω—ã –¥–æ –æ—Ñ–∏—Ü–µ—Ä–∞ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {subclan_name}!",
                color=disnake.Color.blue()
            )
            await member.send(embed=embed)
        except:
            pass

        await inter.response.send_message(f'{member.mention} –ø–æ–≤—ã—à–µ–Ω –¥–æ –æ—Ñ–∏—Ü–µ—Ä–∞!', ephemeral=True)

    @commands.slash_command(
        name="subclandemote",
        description="–ü–æ–Ω–∏–∑–∏—Ç—å –æ—Ñ–∏—Ü–µ—Ä–∞ –¥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def demote_officer_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        member: disnake.Member = commands.Param(description="–û—Ñ–∏—Ü–µ—Ä –¥–ª—è –ø–æ–Ω–∏–∂–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç –ø–æ–Ω–∏–∂–∞—Ç—å –æ—Ñ–∏—Ü–µ—Ä–æ–≤!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –æ—Ñ–∏—Ü–µ—Ä–æ–º
        officer_role = inter.guild.get_role(subclan['roles']['officer'])
        if officer_role not in member.roles:
            await inter.response.send_message('–≠—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ñ–∏—Ü–µ—Ä–æ–º!', ephemeral=True)
            return

        # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å –æ—Ñ–∏—Ü–µ—Ä–∞
        await member.remove_roles(officer_role)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
        if announcements_channel:
            embed = disnake.Embed(
                title="–û—Ñ–∏—Ü–µ—Ä –ø–æ–Ω–∏–∂–µ–Ω",
                description=f"{member.mention} –ø–æ–Ω–∏–∂–µ–Ω –¥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è.",
                color=disnake.Color.orange()
            )
            await announcements_channel.send(embed=embed)

        try:
            embed = disnake.Embed(
                title=f"–ü–æ–Ω–∏–∂–µ–Ω–∏–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {subclan_name}",
                description=f"–í—ã –±—ã–ª–∏ –ø–æ–Ω–∏–∂–µ–Ω—ã –¥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {subclan_name}.",
                color=disnake.Color.orange()
            )
            await member.send(embed=embed)
        except:
            pass

        await inter.response.send_message(f'{member.mention} –ø–æ–Ω–∏–∂–µ–Ω –¥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞!', ephemeral=True)

    @commands.slash_command(
        name="subclanofficers",
        description="–°–ø–∏—Å–æ–∫ –æ—Ñ–∏—Ü–µ—Ä–æ–≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def list_officers_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        officer_role = inter.guild.get_role(subclan['roles']['officer'])
        
        if not officer_role:
            await inter.response.send_message('–†–æ–ª—å –æ—Ñ–∏—Ü–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!', ephemeral=True)
            return

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ñ–∏—Ü–µ—Ä–æ–≤
        officers = []
        for member in officer_role.members:
            officers.append(f"{member.mention}")

        if not officers:
            await inter.response.send_message('–í –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ –Ω–µ—Ç –æ—Ñ–∏—Ü–µ—Ä–æ–≤!', ephemeral=True)
            return

        embed = disnake.Embed(
            title=f"–û—Ñ–∏—Ü–µ—Ä—ã –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {subclan_name}",
            description="\n".join(officers),
            color=disnake.Color.blue()
        )

        await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="subclanaddrole",
        description="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ä–æ–ª—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
    )
    async def add_subclan_role_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        role_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–æ–ª–∏"),
        color: str = commands.Param(description="–¶–≤–µ—Ç —Ä–æ–ª–∏ (hex –∫–æ–¥, –Ω–∞–ø—Ä–∏–º–µ—Ä #FF0000)", default="#000000")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å —Ä–æ–ª–∏ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ!', ephemeral=True)
            return

        try:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ä–æ–ª—å
            new_role = await inter.guild.create_role(
                name=f"{subclan_name} | {role_name}",
                color=disnake.Color(int(color.replace('#', ''), 16)),
                reason=f"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ {subclan_name}"
            )

            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            if 'custom_roles' not in subclan:
                subclan['custom_roles'] = {}
            
            subclan['custom_roles'][role_name] = {
                'id': new_role.id,
                'name': role_name,
                'color': color
            }
            save_clan_data()

            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤
            for channel_id in subclan['channels'].values():
                channel = inter.guild.get_channel(channel_id)
                if channel:
                    await channel.set_permissions(new_role, read_messages=True, send_messages=True)

            await inter.response.send_message(f'–†–æ–ª—å {new_role.mention} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ!', ephemeral=True)

        except Exception as e:
            await inter.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–æ–ª–∏: {str(e)}', ephemeral=True)

    @commands.slash_command(
        name="subclaneditrole",
        description="–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏"
    )
    async def edit_subclan_role_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        role_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è"),
        new_name: str = commands.Param(description="–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏", default=None),
        new_color: str = commands.Param(description="–ù–æ–≤—ã–π —Ü–≤–µ—Ç —Ä–æ–ª–∏ (hex –∫–æ–¥)", default=None)
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Ä–æ–ª–∏ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
        if 'custom_roles' not in subclan or role_name not in subclan['custom_roles']:
            await inter.response.send_message('–†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        try:
            role = inter.guild.get_role(subclan['custom_roles'][role_name]['id'])
            if not role:
                await inter.response.send_message('–†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!', ephemeral=True)
                return

            # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å
            if new_name:
                await role.edit(name=f"{subclan_name} | {new_name}")
                subclan['custom_roles'][role_name]['name'] = new_name
            if new_color:
                await role.edit(color=disnake.Color.from_str(new_color))
                subclan['custom_roles'][role_name]['color'] = new_color

            save_clan_data()
            await inter.response.send_message(f'–†–æ–ª—å {role.mention} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!', ephemeral=True)

        except Exception as e:
            await inter.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏: {str(e)}', ephemeral=True)

    @commands.slash_command(
        name="subclanremoverole",
        description="–£–±—Ä–∞—Ç—å —Ä–æ–ª—å —É —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def remove_role_from_member_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        member: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å —Ä–æ–ª—å"),
        role: disnake.Role = commands.Param(description="–†–æ–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —É —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç —É–±–∏—Ä–∞—Ç—å —Ä–æ–ª–∏!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        if str(member.id) not in subclan['members']:
            await inter.response.send_message('–≠—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Ä–æ–ª–∏ —Å—Ä–µ–¥–∏ —Ä–æ–ª–µ–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        target_role = None
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ ID —Ä–æ–ª–µ–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è (–æ—Å–Ω–æ–≤–Ω—ã–µ –∏ –∫–∞—Å—Ç–æ–º–Ω—ã–µ)
        subclan_role_ids = []
        subclan_roles_map = {} # –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –æ–±—ä–µ–∫—Ç–∞–º —Ä–æ–ª–µ–π –ø–æ ID
        for role_type, role_id in subclan['roles'].items():
            subclan_role_ids.append(role_id)
            role_obj = inter.guild.get_role(role_id)
            if role_obj:
                 subclan_roles_map[role_id] = role_obj

        if 'custom_roles' in subclan:
            for custom_role_data in subclan['custom_roles'].values():
                subclan_role_ids.append(custom_role_data['id'])
                role_obj = inter.guild.get_role(custom_role_data['id'])
                if role_obj:
                     subclan_roles_map[custom_role_data['id']] = role_obj

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å –æ–¥–Ω–æ–π –∏–∑ —Ä–æ–ª–µ–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if role.id in subclan_role_ids:
            target_role = role # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Ä–æ–ª–∏

        if not target_role:
            await inter.response.send_message(f'–†–æ–ª—å {role.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—å—é –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –ª–∏ —É–±—Ä–∞—Ç—å —Ä–æ–ª—å –ª–∏–¥–µ—Ä–∞
        leader_role_id = subclan['roles'].get('leader')
        if leader_role_id and target_role.id == leader_role_id:
            await inter.response.send_message('–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –ª–∏–¥–µ—Ä–∞!', ephemeral=True)
            return

        try:
            # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å
            await member.remove_roles(target_role, reason=f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {subclan_name}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
            if announcements_channel:
                embed = disnake.Embed(
                    title="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
                    description=f"{member.mention} –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å {role.name}",
                    color=disnake.Color.blue()
                )
                await announcements_channel.send(embed=embed)

            await inter.response.send_message(f'–†–æ–ª—å {role.name} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ —É {member.mention}!', ephemeral=True)

        except Exception as e:
            await inter.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏: {str(e)}', ephemeral=True)

    @commands.slash_command(
        name="subclanroles",
        description="–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Ä–æ–ª–µ–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def list_subclan_roles_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        embed = disnake.Embed(
            title=f"–†–æ–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {subclan_name}",
            color=disnake.Color.blue()
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–æ–ª–∏
        main_roles = {
            'leader': '–õ–∏–¥–µ—Ä',
            'officer': '–û—Ñ–∏—Ü–µ—Ä',
            'member': '–£—á–∞—Å—Ç–Ω–∏–∫'
        }

        for role_type, role_name in main_roles.items():
            role = inter.guild.get_role(subclan['roles'][role_type])
            if role:
                embed.add_field(
                    name=role_name,
                    value=f"{role.mention}\n–¶–≤–µ—Ç: {str(role.color)}",
                    inline=True
                )

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ä–æ–ª–∏
        if 'custom_roles' in subclan and subclan['custom_roles']:
            custom_roles_text = []
            for role_name, role_data in subclan['custom_roles'].items():
                role = inter.guild.get_role(role_data['id'])
                if role:
                    custom_roles_text.append(f"{role.mention} - {role_name}")
            
            if custom_roles_text:
                embed.add_field(
                    name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ä–æ–ª–∏",
                    value="\n".join(custom_roles_text),
                    inline=False
                )

        await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="subclansettings",
        description="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def subclan_settings_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        setting_type: str = commands.Param(
            description="–¢–∏–ø –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
            choices=["description", "max_members", "welcome_message"]
        ),
        value: str = commands.Param(description="–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!', ephemeral=True)
            return

        try:
            if setting_type == "description":
                subclan['description'] = value
                await inter.response.send_message(f'–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ!', ephemeral=True)
            
            elif setting_type == "max_members":
                try:
                    max_members = int(value)
                    if max_members < len(subclan['members']):
                        await inter.response.send_message('–ù–æ–≤–æ–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!', ephemeral=True)
                        return
                    subclan['max_members'] = max_members
                    await inter.response.send_message(f'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {max_members}!', ephemeral=True)
                except ValueError:
                    await inter.response.send_message('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ!', ephemeral=True)
                    return
            
            elif setting_type == "welcome_message":
                if 'settings' not in subclan:
                    subclan['settings'] = {}
                subclan['settings']['welcome_message'] = value
                await inter.response.send_message(f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!', ephemeral=True)

            save_clan_data()

        except Exception as e:
            await inter.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {str(e)}', ephemeral=True)

    @commands.slash_command(
        name="subclanviewsettings",
        description="–ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def view_subclan_settings_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        embed = disnake.Embed(
            title=f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {subclan_name}",
            color=disnake.Color.blue()
        )

        # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        embed.add_field(
            name="–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
            value=f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {subclan['description']}\n"
                  f"**–ú–∞–∫—Å–∏–º—É–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {subclan['max_members']}\n"
                  f"**–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {len(subclan['members'])}",
            inline=False
        )

        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        welcome_message = subclan.get('settings', {}).get('welcome_message', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
        embed.add_field(
            name="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            value=welcome_message,
            inline=False
        )

        # –ö–∞–Ω–∞–ª—ã
        channels = []
        for channel_type, channel_id in subclan['channels'].items():
            channel = inter.guild.get_channel(channel_id)
            if channel:
                channels.append(f"{channel_type}: {channel.mention}")
        
        if channels:
            embed.add_field(
                name="–ö–∞–Ω–∞–ª—ã",
                value="\n".join(channels),
                inline=False
            )

        # –†–æ–ª–∏
        roles = []
        for role_type, role_id in subclan['roles'].items():
            role = inter.guild.get_role(role_id)
            if role:
                roles.append(f"{role_type}: {role.mention}")

        if roles:
            embed.add_field(
                name="–†–æ–ª–∏",
                value="\n".join(roles),
                inline=False
            )

        await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="subclangiverole",
        description="–í—ã–¥–∞—Ç—å —Ä–æ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫—É –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def give_subclan_role_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        member: disnake.Member = commands.Param(description="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏"),
        role: disnake.Role = commands.Param(description="–†–æ–ª—å –¥–ª—è –≤—ã–¥–∞—á–∏ –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
    ):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        await inter.response.defer(ephemeral=True)

        if subclan_name not in clan_data.get('subclans', {}):
            await inter.edit_original_response(content='–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.edit_original_response(content='–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å —Ä–æ–ª–∏!')
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        if str(member.id) not in subclan['members']:
            await inter.edit_original_response(content='–≠—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!')
            return

        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–æ–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            subclan_roles = {}
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–æ–ª–∏
            for role_type, role_id in subclan['roles'].items():
                role = inter.guild.get_role(role_id)
                if role:
                    subclan_roles[role_type] = role

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ä–æ–ª–∏
            if 'custom_roles' in subclan:
                for custom_role_name, custom_role_data in subclan['custom_roles'].items():
                    role = inter.guild.get_role(custom_role_data['id'])
                    if role:
                        subclan_roles[custom_role_name] = role

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–∞—è —Ä–æ–ª—å —Å—Ä–µ–¥–∏ —Ä–æ–ª–µ–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            target_role = None

            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ ID —Ä–æ–ª–µ–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è (–æ—Å–Ω–æ–≤–Ω—ã–µ –∏ –∫–∞—Å—Ç–æ–º–Ω—ã–µ)
            subclan_role_ids = []
            for role_type, role_id in subclan['roles'].items():
                subclan_role_ids.append(role_id)
            if 'custom_roles' in subclan:
                for custom_role_data in subclan['custom_roles'].values():
                    subclan_role_ids.append(custom_role_data['id'])

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å –æ–¥–Ω–æ–π –∏–∑ —Ä–æ–ª–µ–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            if role.id in subclan_role_ids:
                target_role = role # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Ä–æ–ª–∏

            # –ï—Å–ª–∏ —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É –∏ –≤—ã—Ö–æ–¥–∏–º
            if not target_role:
                await inter.edit_original_response(content=f'–†–æ–ª—å {role.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—å—é –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!')
                return # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –ª–∏ –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å –ª–∏–¥–µ—Ä–∞
            leader_role_id = subclan['roles'].get('leader')
            if leader_role_id and target_role.id == leader_role_id:
                await inter.edit_original_response(content='–ù–µ–ª—å–∑—è –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å –ª–∏–¥–µ—Ä–∞ —á–µ—Ä–µ–∑ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!')
                return # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —ç—Ç–æ–π —Ä–æ–ª—å—é
            if not inter.guild.me.guild_permissions.manage_roles:
                await inter.edit_original_response(content='–£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏!')
                return

            if target_role >= inter.guild.me.top_role:
                await inter.edit_original_response(content='–†–æ–ª—å –±–æ—Ç–∞ —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∞—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç—Ç–æ–π —Ä–æ–ª—å—é!')
                return

            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–æ–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —É —É—á–∞—Å—Ç–Ω–∏–∫–∞
            roles_to_remove = []
            for role in subclan_roles.values():
                if role != subclan_roles.get('leader') and role in member.roles:  # –ù–µ —Ç—Ä–æ–≥–∞–µ–º —Ä–æ–ª—å –ª–∏–¥–µ—Ä–∞
                    roles_to_remove.append(role)

            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–æ–ª–∏ –æ–¥–Ω–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º
            if roles_to_remove:
                await member.remove_roles(*roles_to_remove, reason=f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {subclan_name}")

            # –í—ã–¥–∞–µ–º –Ω–æ–≤—É—é —Ä–æ–ª—å
            await member.add_roles(target_role, reason=f"–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ {subclan_name}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
            if announcements_channel:
                role_display_name = role.name
                if role.name.lower() == '–æ—Ñ–∏—Ü–µ—Ä':
                    role_display_name = '–û—Ñ–∏—Ü–µ—Ä'
                elif role.name.lower() == '—É—á–∞—Å—Ç–Ω–∏–∫':
                    role_display_name = '–£—á–∞—Å—Ç–Ω–∏–∫'
                
                embed = disnake.Embed(
                    title="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
                    description=f"{member.mention} –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å {role_display_name}",
                    color=disnake.Color.blue()
                )
                await announcements_channel.send(embed=embed)

            await inter.edit_original_response(content=f'–†–æ–ª—å {role_display_name} —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ {member.mention}!')

        except disnake.Forbidden:
            await inter.edit_original_response(content='–£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏!')
        except disnake.HTTPException as e:
            await inter.edit_original_response(content=f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏: {str(e)}')
        except Exception as e:
            await inter.edit_original_response(content=f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}')

    @commands.slash_command(
        name="subclanroleorder",
        description="–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Ä–æ–ª–µ–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def change_role_order_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        role1: str = commands.Param(description="–ü–µ—Ä–≤–∞—è —Ä–æ–ª—å"),
        role2: str = commands.Param(description="–í—Ç–æ—Ä–∞—è —Ä–æ–ª—å")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Ä–æ–ª–µ–π!', ephemeral=True)
            return

        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–∏
        role1_obj = None
        role2_obj = None

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–æ–ª–∏
        if role1.lower() == '–ª–∏–¥–µ—Ä':
            role1_obj = inter.guild.get_role(subclan['roles']['leader'])
        elif role1.lower() == '–æ—Ñ–∏—Ü–µ—Ä':
            role1_obj = inter.guild.get_role(subclan['roles']['officer'])
        elif role1.lower() == '—É—á–∞—Å—Ç–Ω–∏–∫':
            role1_obj = inter.guild.get_role(subclan['roles']['member'])
        elif 'custom_roles' in subclan and role1 in subclan['custom_roles']:
            role1_obj = inter.guild.get_role(subclan['custom_roles'][role1]['id'])

        if role2.lower() == '–ª–∏–¥–µ—Ä':
            role2_obj = inter.guild.get_role(subclan['roles']['leader'])
        elif role2.lower() == '–æ—Ñ–∏—Ü–µ—Ä':
            role2_obj = inter.guild.get_role(subclan['roles']['officer'])
        elif role2.lower() == '—É—á–∞—Å—Ç–Ω–∏–∫':
            role2_obj = inter.guild.get_role(subclan['roles']['member'])
        elif 'custom_roles' in subclan and role2 in subclan['custom_roles']:
            role2_obj = inter.guild.get_role(subclan['custom_roles'][role2]['id'])

        if not role1_obj or not role2_obj:
            await inter.response.send_message('–û–¥–Ω–∞ –∏–ª–∏ –æ–±–µ —Ä–æ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        try:
            # –ú–µ–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ —Ä–æ–ª–µ–π
            await role1_obj.edit(position=role2_obj.position)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
            if announcements_channel:
                embed = disnake.Embed(
                    title="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ —Ä–æ–ª–µ–π",
                    description=f"–ü–æ—Ä—è–¥–æ–∫ —Ä–æ–ª–µ–π {role1_obj.mention} –∏ {role2_obj.mention} –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω",
                    color=disnake.Color.blue()
                )
                await announcements_channel.send(embed=embed)

            await inter.response.send_message(f'–ü–æ—Ä—è–¥–æ–∫ —Ä–æ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!', ephemeral=True)

        except Exception as e:
            await inter.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ—Ä—è–¥–∫–∞ —Ä–æ–ª–µ–π: {str(e)}', ephemeral=True)

    @commands.slash_command(
        name="subclandeleterole",
        description="–£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def delete_subclan_role_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        role_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å —Ä–æ–ª–∏ –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
        role = None
        if role_name.lower() == '–æ—Ñ–∏—Ü–µ—Ä':
            role = inter.guild.get_role(subclan['roles']['officer'])
        elif role_name.lower() == '—É—á–∞—Å—Ç–Ω–∏–∫':
            role = inter.guild.get_role(subclan['roles']['member'])
        elif 'custom_roles' in subclan and role_name in subclan['custom_roles']:
            role = inter.guild.get_role(subclan['custom_roles'][role_name]['id'])

        if not role:
            await inter.response.send_message('–†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –ª–∏ —É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –ª–∏–¥–µ—Ä–∞
        if role.id == subclan['roles']['leader']:
            await inter.response.send_message('–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –ª–∏–¥–µ—Ä–∞!', ephemeral=True)
            return

        try:
            # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å —Å —Å–µ—Ä–≤–µ—Ä–∞
            await role.delete(reason=f"–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {subclan_name}")

            # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            if role_name.lower() == '–æ—Ñ–∏—Ü–µ—Ä':
                del subclan['roles']['officer']
            elif role_name.lower() == '—É—á–∞—Å—Ç–Ω–∏–∫':
                del subclan['roles']['member']
            elif 'custom_roles' in subclan and role_name in subclan['custom_roles']:
                del subclan['custom_roles'][role_name]

            save_clan_data()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
            if announcements_channel:
                embed = disnake.Embed(
                    title="–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è",
                    description=f"–†–æ–ª—å {role_name} –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è",
                    color=disnake.Color.red()
                )
                await announcements_channel.send(embed=embed)

            await inter.response.send_message(f'–†–æ–ª—å {role_name} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!', ephemeral=True)

        except Exception as e:
            await inter.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏: {str(e)}', ephemeral=True)

    @commands.slash_command(
        name="subclanchannel",
        description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def subclan_channel(self, inter: disnake.ApplicationCommandInteraction):
        pass

    @subclan_channel.sub_command(
        name="create",
        description="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏"
    )
    async def create_channel(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        channel_type: str = commands.Param(
            description="–¢–∏–ø –∫–∞–Ω–∞–ª–∞",
            choices=["text", "voice", "announcement"]
        ),
        name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"),
        topic: str = commands.Param(description="–¢–µ–º–∞ –∫–∞–Ω–∞–ª–∞", default=None),
        user_limit: int = commands.Param(
            description="–õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞)",
            default=0,
            min_value=0,
            max_value=99
        )
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞–Ω–∞–ª—ã –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        try:
            category = inter.guild.get_channel(subclan['channels']['category'])
            if not category:
                await inter.response.send_message('–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!', ephemeral=True)
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
            if not inter.guild.me.guild_permissions.manage_channels:
                await inter.response.send_message('–£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤!', ephemeral=True)
                return

            # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
            channel = None
            if channel_type == "text":
                channel = await category.create_text_channel(
                    name=name,
                    topic=topic
                )
            elif channel_type == "voice":
                channel = await category.create_voice_channel(
                    name=name,
                    user_limit=user_limit if user_limit > 0 else None
                )
            elif channel_type == "announcement":
                channel = await category.create_news_channel(
                    name=name,
                    topic=topic
                )

            if not channel:
                await inter.response.send_message('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª!', ephemeral=True)
                return

            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
            member_role = inter.guild.get_role(subclan['roles']['member'])
            officer_role = inter.guild.get_role(subclan['roles']['officer'])
            leader_role = inter.guild.get_role(subclan['roles']['leader'])

            if not all([member_role, officer_role, leader_role]):
                await channel.delete()
                await inter.response.send_message('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!', ephemeral=True)
                return

            await channel.set_permissions(inter.guild.default_role, read_messages=False)
            await channel.set_permissions(member_role, read_messages=True, send_messages=True)
            await channel.set_permissions(officer_role, read_messages=True, send_messages=True, manage_messages=True)
            await channel.set_permissions(leader_role, read_messages=True, send_messages=True, manage_messages=True, manage_channels=True)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
            if 'additional_channels' not in subclan:
                subclan['additional_channels'] = {}
            
            subclan['additional_channels'][str(channel.id)] = {
                'name': name,
                'type': channel_type,
                'created_at': datetime.now().isoformat()
            }
            save_clan_data()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
            if announcements_channel:
                embed = disnake.Embed(
                    title="–ù–æ–≤—ã–π –∫–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω",
                    description=f"–í –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª {channel.mention}",
                    color=disnake.Color.green()
                )
                await announcements_channel.send(embed=embed)

            await inter.response.send_message(f'–ö–∞–Ω–∞–ª {channel.mention} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!', ephemeral=True)

        except Exception as e:
            await inter.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {str(e)}', ephemeral=True)

    @subclan_channel.sub_command(
        name="edit",
        description="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def edit_channel(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        channel: disnake.abc.GuildChannel = commands.Param(description="–ö–∞–Ω–∞–ª –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"),
        new_name: str = commands.Param(description="–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞", default=None),
        new_topic: str = commands.Param(description="–ù–æ–≤–∞—è —Ç–µ–º–∞ –∫–∞–Ω–∞–ª–∞", default=None),
        user_limit: int = commands.Param(
            description="–ù–æ–≤—ã–π –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞)",
            default=None,
            min_value=0,
            max_value=99
        )
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª—ã –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –∫–∞–Ω–∞–ª –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é
        if not hasattr(channel, 'category_id') or channel.category_id != subclan['channels']['category']:
            await inter.response.send_message('–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é!', ephemeral=True)
            return

        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–Ω–∞–ª
            update_params = {}
            
            if new_name:
                update_params['name'] = new_name
                
            if new_topic and isinstance(channel, (disnake.TextChannel, disnake.NewsChannel)):
                update_params['topic'] = new_topic
                
            if user_limit is not None and isinstance(channel, disnake.VoiceChannel):
                update_params['user_limit'] = user_limit if user_limit > 0 else None

            if update_params:
                await channel.edit(**update_params)

                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –¥–∞–Ω–Ω—ã—Ö
                if 'additional_channels' in subclan and str(channel.id) in subclan['additional_channels']:
                    if new_name:
                        subclan['additional_channels'][str(channel.id)]['name'] = new_name
                    save_clan_data()

                await inter.response.send_message(f'–ö–∞–Ω–∞–ª {channel.mention} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!', ephemeral=True)
            else:
                await inter.response.send_message('–ù–µ —É–∫–∞–∑–∞–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!', ephemeral=True)

        except Exception as e:
            await inter.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {str(e)}', ephemeral=True)

    @subclan_channel.sub_command(
        name="delete",
        description="–£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def delete_channel(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        channel: disnake.abc.GuildChannel = commands.Param(description="–ö–∞–Ω–∞–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–¥–µ—Ä–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if str(inter.author.id) != subclan['created_by']:
            await inter.response.send_message('–¢–æ–ª—å–∫–æ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å –∫–∞–Ω–∞–ª—ã –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –∫–∞–Ω–∞–ª –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é
        if not hasattr(channel, 'category_id') or channel.category_id != subclan['channels']['category']:
            await inter.response.send_message('–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é!', ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –ª–∏ —É–¥–∞–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
        if channel.id in subclan['channels'].values():
            await inter.response.send_message('–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è!', ephemeral=True)
            return

        try:
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            confirm_button = disnake.ui.Button(
                style=disnake.ButtonStyle.danger,
                label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
                custom_id="confirm_delete_channel"
            )
            cancel_button = disnake.ui.Button(
                style=disnake.ButtonStyle.secondary,
                label="–û—Ç–º–µ–Ω–∞",
                custom_id="cancel_delete_channel"
            )

            # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
            components = disnake.ui.ActionRow(confirm_button, cancel_button)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            message = await inter.response.send_message(
                f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª {channel.mention}?\n"
                "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!",
                components=[components],
                ephemeral=True
            )

            # –ñ–¥–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
            try:
                interaction = await self.bot.wait_for(
                    "button_click",
                    check=lambda i: i.author == inter.author and i.message.id == message.id,
                    timeout=30.0
                )
            except:
                await inter.edit_original_response(
                    content="–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
                    components=[]
                )
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞
            if interaction.data.custom_id == "cancel_delete_channel":
                await interaction.response.edit_message(
                    content="–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
                    components=[]
                )
                return

            # –ï—Å–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ, —É–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª
            await interaction.response.edit_message(
                content="–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞...",
                components=[]
            )

            # –£–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª
            await channel.delete()

            # –£–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –¥–∞–Ω–Ω—ã—Ö
            if 'additional_channels' in subclan and str(channel.id) in subclan['additional_channels']:
                del subclan['additional_channels'][str(channel.id)]
                save_clan_data()

            await interaction.edit_original_response(
                content=f'–ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!',
                components=[]
            )

        except Exception as e:
            await inter.response.send_message(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {str(e)}', ephemeral=True)

    @subclan_channel.sub_command(
        name="list",
        description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
    )
    async def list_channels(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
    ):
        if subclan_name not in clan_data.get('subclans', {}):
            await inter.response.send_message('–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!', ephemeral=True)
            return

        subclan = clan_data['subclans'][subclan_name]
        
        embed = disnake.Embed(
            title=f"–ö–∞–Ω–∞–ª—ã –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è {subclan_name}",
            color=disnake.Color.blue()
        )

        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
        main_channels = {
            'general': '–û–±—â–∏–π –∫–∞–Ω–∞–ª',
            'announcements': '–ö–∞–Ω–∞–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–π',
            'voice': '–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª'
        }

        main_channels_text = []
        for channel_type, channel_name in main_channels.items():
            channel = inter.guild.get_channel(subclan['channels'][channel_type])
            if channel:
                main_channels_text.append(f"{channel.mention} - {channel_name}")

        if main_channels_text:
            embed.add_field(
                name="–û—Å–Ω–æ–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã",
                value="\n".join(main_channels_text),
                inline=False
            )

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
        if 'additional_channels' in subclan and subclan['additional_channels']:
            additional_channels_text = []
            for channel_id, channel_data in subclan['additional_channels'].items():
                channel = inter.guild.get_channel(int(channel_id))
                if channel:
                    channel_type = channel_data['type']
                    type_emoji = {
                        'text': 'üí¨',
                        'voice': 'üîä',
                        'announcement': 'üì¢'
                    }.get(channel_type, '‚ùì')
                    additional_channels_text.append(f"{type_emoji} {channel.mention}")

            if additional_channels_text:
                embed.add_field(
                    name="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã",
                    value="\n".join(additional_channels_text),
                    inline=False
                )

        await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.Cog.listener()
    async def on_member_remove(self, member: disnake.Member):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –≤—ã—Ö–æ–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –∫–ª–∞–Ω–∞"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        for subclan_name, subclan in clan_data.get('subclans', {}).items():
            # –ï—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –±—ã–ª –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
            if str(member.id) in subclan['members']:
                # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–æ–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
                for role_id in subclan['roles'].values():
                    role = member.guild.get_role(role_id)
                    if role and role in member.roles:
                        try:
                            await member.remove_roles(role)
                        except:
                            pass

                # –£–¥–∞–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ä–æ–ª–∏
                if 'custom_roles' in subclan:
                    for custom_role_data in subclan['custom_roles'].values():
                        role = member.guild.get_role(custom_role_data['id'])
                        if role and role in member.roles:
                            try:
                                await member.remove_roles(role)
                            except:
                                pass

                # –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                subclan['members'].remove(str(member.id))

                # –£–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞
                if 'applications' in subclan and str(member.id) in subclan['applications']:
                    del subclan['applications'][str(member.id)]

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–π
                announcements_channel = member.guild.get_channel(subclan['channels']['announcements'])
                if announcements_channel:
                    embed = disnake.Embed(
                        title="–£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –∫–ª–∞–Ω",
                        description=f"{member.mention} –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è, —Ç–∞–∫ –∫–∞–∫ –ø–æ–∫–∏–Ω—É–ª –∫–ª–∞–Ω.",
                        color=disnake.Color.red()
                    )
                    await announcements_channel.send(embed=embed)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        save_clan_data()

    @commands.slash_command(
        name="subclanleave",
        description="–ü–æ–∫–∏–Ω—É—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
    )
    async def leave_subclan_slash(
        self,
        inter: disnake.ApplicationCommandInteraction,
        subclan_name: str = commands.Param(description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
    ):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        await inter.response.defer(ephemeral=True)

        if subclan_name not in clan_data.get('subclans', {}):
            await inter.edit_original_response(content='–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
            return

        subclan = clan_data['subclans'][subclan_name]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        if str(inter.author.id) not in subclan['members']:
            await inter.edit_original_response(content='–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —ç—Ç–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏!')
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –ª–∏–¥–µ—Ä–æ–º
        if str(inter.author.id) == subclan['created_by']:
            await inter.edit_original_response(content='–õ–∏–¥–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –ø–æ–∫–∏–Ω—É—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /subclandelete –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è.')
            return

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        confirm_button = disnake.ui.Button(
            style=disnake.ButtonStyle.danger,
            label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
            custom_id="confirm_leave"
        )
        cancel_button = disnake.ui.Button(
            style=disnake.ButtonStyle.secondary,
            label="–û—Ç–º–µ–Ω–∞",
            custom_id="cancel_leave"
        )

        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
        components = disnake.ui.ActionRow(confirm_button, cancel_button)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        message = await inter.edit_original_response(
            content=f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ '{subclan_name}'?\n"
                   "–ü–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.",
            components=[components]
        )

        # –ñ–¥–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        try:
            interaction = await self.bot.wait_for(
                "button_click",
                check=lambda i: i.author == inter.author and i.message.id == message.id,
                timeout=30.0
            )
        except:
            await inter.edit_original_response(
                content="–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –í—ã—Ö–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω.",
                components=[]
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞
        if interaction.data.custom_id == "cancel_leave":
            await interaction.response.edit_message(
                content="–í—ã—Ö–æ–¥ –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω.",
                components=[]
            )
            return

        # –ï—Å–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ, —É–¥–∞–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞
        await interaction.response.edit_message(
            content="–í—ã—Ö–æ–¥ –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è...",
            components=[]
        )

        try:
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–æ–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            for role_id in subclan['roles'].values():
                role = inter.guild.get_role(role_id)
                if role and role in inter.author.roles:
                    try:
                        await inter.author.remove_roles(role)
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏ {role.name}: {str(e)}")

            # –£–¥–∞–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ä–æ–ª–∏
            if 'custom_roles' in subclan:
                for custom_role_data in subclan['custom_roles'].values():
                    role = inter.guild.get_role(custom_role_data['id'])
                    if role and role in inter.author.roles:
                        try:
                            await inter.author.remove_roles(role)
                        except Exception as e:
                            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ä–æ–ª–∏ {role.name}: {str(e)}")

            # –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            subclan['members'].remove(str(inter.author.id))

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –≤—ã—Ö–æ–¥–∞
            if 'leave_cooldowns' not in clan_data:
                clan_data['leave_cooldowns'] = {}
            clan_data['leave_cooldowns'][str(inter.author.id)] = datetime.now().isoformat()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            announcements_channel = inter.guild.get_channel(subclan['channels']['announcements'])
            if announcements_channel:
                try:
                    embed = disnake.Embed(
                        title="–£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ",
                        description=f"{inter.author.mention} –ø–æ–∫–∏–Ω—É–ª –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.",
                        color=disnake.Color.orange()
                    )
                    await announcements_channel.send(embed=embed)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {str(e)}")

            save_clan_data()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π –æ—Ç–≤–µ—Ç
            await interaction.followup.send(
                content=f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–Ω—É–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ "{subclan_name}"!\n'
                       '–í—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.',
                ephemeral=True
            )

        except Exception as e:
            error_message = f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: {str(e)}'
            print(error_message)  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            try:
                await interaction.followup.send(
                    content=error_message,
                    ephemeral=True
                )
            except:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ followup, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ edit
                try:
                    await interaction.edit_original_response(
                        content=error_message,
                        components=[]
                    )
                except:
                    # –ï—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ —É–¥–∞–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await inter.followup.send(
                        content=error_message,
                        ephemeral=True
                    )

    def check_cooldown(self, user_id: str) -> tuple[bool, str]:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫—É–ª–¥–∞—É–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if 'leave_cooldowns' not in clan_data:
            return True, ""

        last_leave = clan_data['leave_cooldowns'].get(str(user_id))
        if not last_leave:
            return True, ""

        last_leave_time = datetime.fromisoformat(last_leave)
        time_passed = datetime.now() - last_leave_time
        cooldown_time = timedelta(hours=24)

        if time_passed < cooldown_time:
            remaining = cooldown_time - time_passed
            hours = int(remaining.total_seconds() // 3600)
            minutes = int((remaining.total_seconds() % 3600) // 60)
            return False, f"{hours} —á. {minutes} –º–∏–Ω."

        return True, ""

def setup(bot):
    bot.add_cog(Subclans(bot)) 